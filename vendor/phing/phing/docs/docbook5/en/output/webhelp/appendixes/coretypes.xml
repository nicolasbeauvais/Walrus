<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" 
            schematypens="http://relaxng.org/ns/structure/1.0"?>
<appendix xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="app.coretypes">
	<title>Core Types</title>
	<para> This appendix contains a reference of the system <literal>data types</literal> contained
		in Phing.</para>

	<sect1 role="typedef" xml:id="Excludes">
		<title>Excludes</title>
		<para>Specifies a set of files, classes or methods to be excluded from processing.</para>
		<para>This element has no attributes, only nested tags</para>
		<sect2 role="nestedtags">
			<title>Nested tags</title>
			<itemizedlist>
				<listitem>
					<para>File</para>
				</listitem>
				<listitem>
					<para>Class</para>
				</listitem>
				<listitem>
					<para>Method</para>
				</listitem>
			</itemizedlist>
			<table>
				<title> Common attributes for all <literal>File, Class, Method</literal> tags </title>
				<tgroup cols="5">
					<colspec colname="name" colnum="1" colwidth="1.5*"/>
					<colspec colname="type" colnum="2" colwidth="0.8*"/>
					<colspec colname="description" colnum="3" colwidth="3.5*"/>
					<colspec colname="default" colnum="4" colwidth="0.8*"/>
					<colspec colname="required" colnum="5" colwidth="1.2*"/>
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Type</entry>
							<entry>Description</entry>
							<entry>Default</entry>
							<entry>Required</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><literal>name</literal></entry>
							<entry><literal role="type">String</literal></entry>
							<entry>The name of the class, method or file. This may also be specified
								as a pattern.</entry>
							<entry>n/a</entry>
							<entry>Yes</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</sect2>
		<sect2>
			<title>Usage Examples</title>
			<programlisting language="xml">&lt;coverage-threshold
    perProject="50"
    perClass="60"
    perMethod="70"/>
    &lt;excludes>
        &lt;file>**/*Processor.php&lt;/file>
        &lt;class>Model_Filter_Windows&lt;/class>
        &lt;method>Model_System::execute()&lt;/method>
    &lt;/excludes></programlisting>
		</sect2>
	</sect1>
	<sect1 role="typedef" xml:id="FileList">
		<title>FileList</title>
		<para>FileLists offer a way to represent a specific list of files. Unlike FileSets,
			FileLists may contain files that do not exist on the filesystem. Also, FileLists can
			represent files in a specific order -- whereas FileSets represent files in whichever
			order they are returned by the filesystem.</para>
		<table>
			<title> Attributes for the <literal>&lt;fileset></literal> tag </title>
			<tgroup cols="5">
				<colspec colname="name" colnum="1" colwidth="1.5*"/>
				<colspec colname="type" colnum="2" colwidth="0.8*"/>
				<colspec colname="description" colnum="3" colwidth="3.5*"/>
				<colspec colname="default" colnum="4" colwidth="0.8*"/>
				<colspec colname="required" colnum="5" colwidth="1.2*"/>				
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Description</entry>
						<entry>Default</entry>
						<entry>Required</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><literal>dir</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The directory, to which the paths given in <literal>files
							</literal>or <literal>listfile</literal> are relative.</entry>
						<entry>n/a</entry>
						<entry>Yes</entry>
					</row>
					<row>
						<entry><literal>files</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>Comma or space-separated list of files.</entry>
						<entry>n/a</entry>
						<entry>Yes (or <literal>listfile)</literal>
						</entry>
					</row>
					<row>
						<entry><literal>listfile</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>A text file with one filename per line.</entry>
						<entry>n/a</entry>
						<entry>Yes (or <literal>files)</literal>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<sect2>
			<title>Usage Examples</title>
			<programlisting language="xml">&lt;filelist dir="/etc" files="httpd/conf/httpd.conf,php.ini"/></programlisting>
			<para> Or you can use a <literal>listfile</literal>, which is expected to contain one
				filename per line: </para>
			<programlisting language="xml">&lt;filelist dir="conf/" listfile="ini_files.txt"/></programlisting>
			<para> This will grab each file as listed in <literal>ini_files.txt</literal>. This can
				be useful if one task compiles a list of files to process and another task needs to
				read in that list and perform some action to those files.</para>
		</sect2>
	</sect1>
	<sect1 role="typedef" xml:id="FileSet">
		<title>FileSet</title>

		<para> FileSets offer an easy and straightforward way to include files. The tag supports
				<link xlink:href="#app.selectors">Selectors</link> and <link
				xlink:href="#PatternSet">PatternSets</link>. Additionally, you can include/exclude
			files in/from a fileset using the
				<literal>&lt;include></literal>/<literal>&lt;exclude></literal> tags. In patterns,
			one asterisk (<literal>*</literal>) maps to a part of a file/directory name within a
			directory level. Two asterisks (<literal>**</literal>) may include above the "border" of
			the directory separator.</para>
		<table>
			<title> Attributes for the <literal>&lt;fileset></literal> tag </title>
			<tgroup cols="5">
				<colspec colname="name" colnum="1" colwidth="1.5*"/>
				<colspec colname="type" colnum="2" colwidth="0.8*"/>
				<colspec colname="description" colnum="3" colwidth="3.5*"/>
				<colspec colname="default" colnum="4" colwidth="0.8*"/>
				<colspec colname="required" colnum="5" colwidth="1.2*"/>				
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Description</entry>
						<entry>Default</entry>
						<entry>Required</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><literal>dir</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The directory, the paths given in
								<literal>include</literal>/<literal>exclude</literal> are relative
							to.</entry>
						<entry>n/a</entry>
						<entry>Yes</entry>
					</row>
					<row>
						<entry><literal>defaultexcludes</literal></entry>
						<entry><literal role="type">Boolean</literal></entry>
						<entry>Whether default exclusions should be used or not. Default excludes
							are: <literal>*~</literal>, <literal>#*#</literal>,
								<literal>.#*</literal>, <literal>%*%</literal>,
								<literal>CVS</literal>, <literal>CVS/**</literal>,
								<literal>.cvsignore</literal>, <literal>SCCS</literal>,
								<literal>SCCS/**</literal>, <literal>vssver.scc</literal>,
								<literal>.svn</literal>, <literal>.svn/**</literal>,
								<literal>._*</literal>, <literal>.DS_Store</literal>,
								<literal>.darcs</literal>, <literal>.darcs/**</literal>
						</entry>
						<entry><literal>true</literal></entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>casesensitive</literal></entry>
						<entry><literal role="type">Boolean</literal></entry>
						<entry>The case sensitivity of the file system.</entry>
						<entry><literal>true</literal></entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>expandsymboliclinks</literal></entry>
						<entry><literal role="type">Boolean</literal></entry>
						<entry>Whether to expand/dereference (follow) symbolic links - set to 'true'
							to emulate old Phing behavior.</entry>
						<entry><literal>false</literal></entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>includes</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>Comma- or space-separated list of patterns of files that must be
							included; all files are included when omitted.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>includesfile</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The name of a file; each line of this file is taken to be an include
							pattern.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>excludes</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>comma- or space-separated list of patterns of files that must be
							excluded; no files (except default excludes) are excluded when
							omitted.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>excludesfile</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The name of a file; each line of this file is taken to be an exclude
							pattern.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<sect2>
			<title>Using wildcards</title>
			<itemizedlist>
				<listitem>
					<para><literal>test*.xml</literal> will include <literal>test_42.xml</literal>,
						but it will not include <literal>test/some.xml</literal>.</para>
				</listitem>
				<listitem>
					<para><literal>test**.xml</literal> fits to <literal>test_42.xml</literal> as
						well as to <literal>test/bla.xml</literal>, for example.</para>
				</listitem>
				<listitem>
					<para><literal>**/*.ent.xml</literal> fits to all files that end with
							<literal>ent.xml</literal> in all subdirectories of the directory
						specified with the <literal>dir</literal> attribute of the
							<literal>&lt;fileset></literal> tag. However, it will not include any
						files that are directly in the base directory of the file set.</para>
				</listitem>
			</itemizedlist>
		</sect2>
		<sect2>
			<title>Usage Examples</title>
			<programlisting language="xml">&lt;fileset dir="/etc" >
  &lt;include name="httpd/**" />
  &lt;include name="php.ini" />
&lt;/fileset>

&lt;fileset dir="/etc" >
  &lt;patternset>
    &lt;include name="**/*.php"/>
    &lt;exclude name="**/*Test*"/>
  &lt;/patternset>
&lt;/fileset></programlisting>
			<para> This will include the apache configuration and PHP configuration file from
					<literal>/etc</literal>.</para>
		</sect2>
		<sect2 role="nestedtags">
			<title>Nested tags</title>
			<para> The tags that are supported by <literal>Fileset</literal> are:</para>
			<itemizedlist>
				<listitem>
					<para>include</para>
				</listitem>
				<listitem>
					<para>exclude</para>
				</listitem>
				<listitem>
					<para>patternset</para>
				</listitem>
			</itemizedlist>
			<para>The <literal>&lt;include></literal> and the <literal>&lt;exclude></literal> tags
				must have a <literal>name</literal> attribute that contains the pattern to
				include/exclude.</para>
		</sect2>
	</sect1>
	<sect1 role="typedef" xml:id="PatternSet">
		<title>PatternSet </title>
		<para>The PatternSet data type defines patterns that can be grouped into sets and nested
			into <link xlink:href="#FileSet">FileSets</link>. Patterns can be specified by nested
			&lt;include> or &lt;exclude> elements.</para>
		<table>
			<title> Attributes for <literal>&lt;patternset></literal> tag </title>
			<tgroup cols="5">
				<colspec colname="name" colnum="1" colwidth="1.5*"/>
				<colspec colname="type" colnum="2" colwidth="0.8*"/>
				<colspec colname="description" colnum="3" colwidth="3.5*"/>
				<colspec colname="default" colnum="4" colwidth="0.8*"/>
				<colspec colname="required" colnum="5" colwidth="1.2*"/>				
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Description</entry>
						<entry>Default</entry>
						<entry>Required</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><literal>includes</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>Comma- or space-separated list of patterns of files that must be
							included; all files are included when omitted.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>includesfile</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The name of a file; each line of this file is taken to be an include
							pattern.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>excludes</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>comma- or space-separated list of patterns of files that must be
							excluded; no files (except default excludes) are excluded when
							omitted.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>excludesfile</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>The name of a file; each line of this file is taken to be an exclude
							pattern.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<sect2>
			<title>Usage Example</title>
			<programlisting language="xml">&lt;patternset id="no.tests">
  &lt;include name="**/*.php"/>
  &lt;exclude name="**/*Test*"/>
&lt;/patternset></programlisting>
		</sect2>
		<sect2 role="nestedtags">
			<title>Nested tags</title>
			<para> The <literal>&lt;patternset></literal> tag only supports
					<literal>&lt;include></literal> and <literal>&lt;exclude></literal>. The
					<literal>&lt;include></literal> and the <literal>&lt;exclude></literal> tags
				must have a <literal>name</literal> attribute that contains the pattern to
				include/exclude.</para>
		</sect2>
	</sect1>
	<sect1 role="typedef" xml:id="path">
		<title>Path / Classpath</title>
		<para>The Path data type can be used to respresent path structures. In many cases the path
			type will be used for nested &lt;classpaentry> tags. E.g.</para>
		<programlisting language="xml">&lt;path id="project.class.path">
  &lt;pathelement dir="lib/"/>
  &lt;pathelement dir="ext/"/>
&lt;/paentry>

&lt;target name="blah">
  &lt;taskdef name="mytask" path="myapp.phing.tasks.MyTask">
    &lt;classpath refid="project.class.path"/>
  &lt;/taskdef>
&lt;/target></programlisting>

		<table>
			<title> Attributes for <literal>&lt;paentry></literal> tag </title>
			<tgroup cols="5">
				<colspec colname="name" colnum="1" colwidth="1.5*"/>
				<colspec colname="type" colnum="2" colwidth="0.8*"/>
				<colspec colname="description" colnum="3" colwidth="3.5*"/>
				<colspec colname="default" colnum="4" colwidth="0.8*"/>
				<colspec colname="required" colnum="5" colwidth="1.2*"/>				
				<thead>
					<row>
						<entry>Name</entry>
						<entry>Type</entry>
						<entry>Description</entry>
						<entry>Default</entry>
						<entry>Required</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><literal>dir</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>Specific path to directory</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry><literal>path</literal></entry>
						<entry><literal role="type">String</literal></entry>
						<entry>A path (which contains multiple locations separated by
							path.separator) to add.</entry>
						<entry>n/a</entry>
						<entry>No</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<sect2 role="nestedtags">
			<title>Nested tags</title>
			<para> The <literal>&lt;paentry> </literal>tag supports nested
					<literal>&lt;fileset></literal> and <literal>&lt;dirset></literal> tags.</para>
		</sect2>
	</sect1>
</appendix>
